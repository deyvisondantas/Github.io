:source-highlighter: pygments
= Processamento Digital de Imagem
Deyvison Luiz Guedes Dantas <deyvison@ufrn.edu.br>

Olá, eu sou Deyvison, graduando de Engenharia de Computação da Universidade Federal do Rio Grande do Norte - UFRN.

Este site tem como objetivo publicar a resolução de exercícios da disciplina de Processamento Digital de Imagens, ministrada pelo professor Agostinho Brito Júnior https://agostinhobritojr.github.io/[Agostinho Brito Júnior].

Vamos aos exercícios...

== Exercícios

== 1. Negativo de uma imagem

Este exercício proprõe que uma área da imagem, delimitada por dois pontos (P1 e P2) informados pelo usuario, tenha o seu negativo exibido. 

Para a execução do algorítmo, em primeiro lugar se obtem as coordenadas dos dos pontos. Após ter posse desses pontos, usa-se os laços [source,c++] for [source,c++] para varrer a região desejada. 

O processamento para tornar a região negativa, consiste em os pixels da região receber seus respectivos valores subtraídos de 255. 

Abaixo a imagem usada e o código feito.

[[Figura: sanduiche.png]]
.Charlie Chaplin no filme  
image::/home/deyvison/engcomp/pdi/sanduiche.png

regions.cpp 
[source,c++]

#include <iostream>
#include <opencv2/opencv.hpp>

using namespace cv;
using namespace std;

int main(int, char**){
	Mat image; 
	Vec3b val;
	int x1,y1,x2,y2; 			// Coordenadas dos pontos P1 e P2

	image = imread("sanduiche.png",CV_LOAD_IMAGE_GRAYSCALE);
	if(!image.data){
		cout << "Nao abriu sanduiche.png" <<endl;
	}
	
	cout << "Por favor insira as coordenadas do ponto P1 (x,y)" << endl;
	cin >> x1;
       	cin >> y1;
	cout << "Por favor insira as coordenadas do ponto p2 (x,y)" << endl;
	cin >> x2;
	cin >> y2;

	for (int i = x1; i < x2; i++){
		for (int j = y1; j < y2; j++){ 
			image.at<uchar>(i,j)=(255 - image.at<uchar>(i,j));
		}				 // Gerando o negativo
	}

	namedWindow("Janela-1",WINDOW_AUTOSIZE); 
	imshow("Janela-1", image);   		
	imwrite("negativo.png",image);		 
	waitKey();
	//return 0;
}


* 1 - 
* item 2
  ** item 3
     ... item 4
     ... item 5
  ** item 6

//-
[source,c++]

cout << "Hello, World!";
